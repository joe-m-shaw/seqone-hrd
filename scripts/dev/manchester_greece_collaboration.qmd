---
title: "Manchester Greece Collaboration"
author: "Joe M. Shaw and George Burghel"
format: revealjs
editor: visual
---

```{r}
#| label: packages
#| include: FALSE

library(tidyverse)
library(readxl)
library(ggpubr)
library(patchwork)

```

```{r}
#| label: data
#| include: FALSE

tbrca_list <- read_excel(path = paste0(
  config::get("data_folderpath"), 
  "live_service/greek_collaboration/",
  "2025-05-20_tBRCA & HRD active list.xlsx"),
  sheet = "tBRCA & HRD (SeqOne)") |> 
  janitor::clean_names()

```

```{r}
#| label: data-cleaning
#| include: FALSE

fail_variants <- c("analysis failed",
                   "Analysis failed",
                   "Fail", "fail")

tbrca_list_mod <- tbrca_list |> 
  mutate(hrd_score_numeric = parse_number(hrd_score),
         hrd_ws_number = as.character(parse_number(hrd_wgs_ws))) |> 
  filter(!is.na(hrd_score_numeric)) |> 
  select(lab_id, hrd_wgs_ws, hrd_ws_number,
         name, hrd_score, hrd_score_numeric,
         hrd_status, t_brca_mutation_status) 
  
tbrca_list_regex <- tbrca_list_mod |> 
  mutate(brca_status_clean = case_when(
    t_brca_mutation_status %in% fail_variants ~"fail",
    grepl(pattern = "BRCA(1|2)\\sc\\.*",
          x = t_brca_mutation_status) ~"BRCA pathogenic variant",
    grepl(pattern = "No\\spathogenic\\s.*",
          x = t_brca_mutation_status) ~"No BRCA variants",
    TRUE ~"other"
  ),
  brca_status_clean = factor(brca_status_clean,
                             levels = c("No BRCA variants",
                                        "BRCA pathogenic variant",
                                        "fail",
                                        "other")))

tbrca_list_var_type <- tbrca_list_regex |> 
  mutate(brca_variant_type = case_when(
    
    grepl(pattern = "fs|Ter", x = t_brca_mutation_status) ~"truncating",
    
    #grepl(pattern = "\\d{1,4}Ter", x = t_brca_mutation_status) ~"nonsense",
    
    grepl(pattern = "\\+", x = t_brca_mutation_status) ~"splice",
    
    grepl(pattern = "\\w{3}\\d{1,4}\\w{3}", x = t_brca_mutation_status) &
      !grepl(pattern = "Ter", x = t_brca_mutation_status) ~"missense",
    TRUE ~"none"),
    
    brca_variant_type = factor(brca_variant_type,
                               levels = c("none",
                                          "truncating",
                                          #"nonsense",
                                          "missense",
                                          "splice"
                                          )),
    
    variant_position = as.numeric(str_extract(string = t_brca_mutation_status,
                                        pattern = "c.(\\d{1,4})(dup|_|A|T|C|G|del|\\+).*",
                                        group =1)),
         gene = str_extract(string = t_brca_mutation_status,
                            pattern = "(BRCA1|BRCA2).*",
                            group = 1))

```

```{r}
#| label: brca-gi-scores
#| echo: FALSE
#| fig-width: 6
#| fig-height: 6

inconclusive_vars <- c("Inconclusive",
                            "Non-conclusive",
                            "inconclusive",
                            "Inconc",
                            "Incoc")

brca_comps <- list(
  c("No BRCA variants",
       "BRCA pathogenic variant"))

tbrca_data_for_plot <- tbrca_list_regex |> 
  filter(!brca_status_clean %in% c("other", "fail")) |> 
  filter(!duplicated(lab_id)) |> 
  filter(!duplicated(name)) |> 
  filter(!hrd_status %in% inconclusive_vars)

brca_gi_boxplot <- ggplot(tbrca_data_for_plot, 
       aes(x = brca_status_clean, y = hrd_score_numeric)) +
  geom_boxplot(outliers = FALSE) +
  geom_jitter(shape = 21, size = 2, width = 0.1) +
  theme_bw() +
  theme(panel.grid = element_blank())+
  labs(x = "NGS result", 
       y = "SeqOne GI score") +
  scale_y_continuous(limits = c(0, 1.2),
                     breaks = seq(0, 1.0, by = 0.1),
                     minor_breaks = FALSE) +
  stat_compare_means(comparisons = brca_comps,
                     label.y = 1.1)

```

At the Manchester lab we test ovarian cancer samples by:

- QIAseq based next generation sequencing
- Genomic instability testing (SeqOne)

Since December 2023, we have conclusive results for 
`r nrow(tbrca_data_for_plot)` ovarian cancer patients.

---

### BRCA variants correlate with GI scores 

```{r}
#| label: plot
#| echo: FALSE

brca_gi_boxplot

```

---

### All our results since December 2023

```{r}
#| echo: FALSE

base_plot <- tbrca_list_var_type |> 
  filter(!brca_status_clean %in% c("other", "fail")) |> 
  filter(!duplicated(lab_id)) |> 
  filter(!duplicated(name)) |> 
  filter(!hrd_status %in% inconclusive_vars) |> 
  ggplot(aes(x = hrd_ws_number,
             y = hrd_score_numeric)) +
  geom_point(shape = 21, size = 2) +
  theme_bw() +
  theme(panel.grid = element_blank())+
  theme(axis.text.x = element_blank()) +
  scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
  labs(x = "Worksheet",
       y = "SeqOne GI score")

base_plot

```

---

### All our results since December 2023

```{r}
#| echo: FALSE

base_plot +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  annotate('rect', xmin= 0, 
           xmax = length(unique(tbrca_list_var_type$hrd_ws_number)), 
           ymin = 0.5, 
           ymax = 1, 
           alpha= 0.2, 
           fill='red') +
  annotate('rect', xmin= 0, 
           xmax = length(unique(tbrca_list_var_type$hrd_ws_number)), 
           ymin = 0, 
           ymax = 0.5, 
           alpha= 0.2, 
           fill = "blue") +
  annotate(geom = "text", x = 35, y = 0.6,
           label = "GI Positive") +
  annotate(geom = "text", x = 35, y = 0.4,
           label = "GI Negative")
  

```

---

### Results coloured by BRCA status

```{r}
#| echo: FALSE

plot_colours <- c("white", "red", "blue", "green", "grey")

base_plot +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  geom_point(shape = 21, size = 2, aes(fill = brca_variant_type)) +
  scale_fill_manual(values = plot_colours) +
  labs(fill = "BRCA variant type") +
  theme(legend.position = "bottom")

```

---

### Results sorted by BRCA status

```{r}
#| echo: FALSE

split_plot <- tbrca_list_var_type |> 
  filter(!duplicated(lab_id)) |> 
  filter(!duplicated(name)) |> 
  filter(!hrd_status %in% inconclusive_vars) |> 
  ggplot(aes(x = brca_variant_type,
             y = hrd_score_numeric)) +
  geom_jitter(shape = 21, size = 2, aes(fill = brca_variant_type),
              width = 0.2) +
  scale_fill_manual(values = plot_colours) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        legend.position = "bottom")+
  scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
  labs(x = "BRCA variant",
       y = "SeqOne GI score",
       fill = "BRCA variant type")

split_plot

```

---

### There are 3 major zones

```{r}
#| echo: FALSE

split_plot_lines <- split_plot +
  geom_hline(yintercept = 0.6, linetype = "dashed") +
  geom_hline(yintercept = 0.4, linetype = "dashed") +
  annotate(geom = "text", x = 4, y = 0.9,
           label = "GI Positive") +
  annotate(geom = "text", x = 4, y = 0.1,
           label = "GI Negative") +
  annotate(geom = "text", x = 4, y = 0.5,
           label = "Borderline")

split_plot_lines

```

---

### What is driving these tumours?

```{r}
#| echo: FALSE

split_plot_lines +
  annotate('rect', xmin=0.5, xmax=1.5, ymin=0, ymax=0.4, 
           alpha= 0.2, fill='red')

```

---

### Are these tumours a distinct sub-type?

```{r}
#| echo: FALSE

split_plot_lines +
  annotate('rect', xmin= 0.5, xmax=4.5, ymin=0.4, ymax=0.6, 
           alpha= 0.2, fill='red')

```

---

### Should these tumours get PARPi?

```{r}
#| echo: FALSE

split_plot_lines +
  annotate('rect', xmin=1.5, xmax=4.5, ymin=0, ymax=0.4, 
           alpha= 0.2, fill='red')

```

---
```{r}
#| include: FALSE

var_gi_range_tbl <- tbrca_list_var_type |> 
  mutate(gi_score_range = case_when(
    hrd_score_numeric > 0.6  ~"GI positive",
    hrd_score_numeric <= 0.6 &
      hrd_score_numeric >= 0.4 ~"Borderline",
    hrd_score_numeric < 0.4 ~"GI negative"),
    gi_score_range = factor(gi_score_range,
                            levels = c("GI positive",
                                       "Borderline",
                                       "GI negative"))) |> 
  group_by(gi_score_range, brca_variant_type) |> 
  count() |> 
  pivot_wider(id_cols = gi_score_range,
              names_from = brca_variant_type,
              values_from = n,
              values_fill = 0)

fisher_result <- fisher.test(x = matrix(c(var_gi_range_tbl$truncating,
                         var_gi_range_tbl$missense),
       nrow = 3))

```

### Are missenses enriched in borderline cases?

```{r}
#| echo: FALSE

split_plot_lines +
  annotate('rect', xmin=1.5, xmax=3.5, ymin=0, ymax=1, 
           alpha= 0.2, fill='red') +
  annotate(geom = "text", 
           x = 3, y = 0.7,
           label = paste0("Fisher exact test: ",
                          round(fisher_result$p.value, 2)))

```

---

### What is going on in these germline BRCA cases?

```{r}
#| echo: FALSE

germline_brca_cases <- c("24069447", "25000823", "24067433")

split_plot_lines +
  annotate('rect', xmin=1.8, xmax=2.2, 
           ymin=0.1, 
           ymax=0.25, 
           alpha= 0.2, fill='red')

```
