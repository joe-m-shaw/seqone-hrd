---
title: "INC9110 Investigation"
author: "Joe Shaw, Clinical Scientist (CS20980)"
date: today
date-format: "DD/MM/YYYY"
format: pdf
---

## Code

Code to produce this Quarto was written using [Github copilot](https://github.com/features/copilot/) and is saved in my [Github repo](https://github.com/joeshaw824/homologous_recombination_deficiency).

## Introduction

The SeqOne SomaHRD pipeline has been validated for homologous recombination deficiency (HRD) testing in ovarian cancer.

Validation samples were analysed between 02/11/2023 and 06/11/2023 with SomaHRD v1.2.0, and this version was approved for clinical use (DOC6192 approved 14/12/2023).

It recently came to our attention that since the clinical service has gone live, the patch number of SomaHRD had changed without being communicated. 

In April 2024 the version in use is version 1.2.7.

```{r}
#| label: packages-and-functions
#| include: false

library("tidyverse")
library("ggpubr")
library("readxl")
library("here")
library("patchwork")
library("rvest")

source(here::here("functions/hrd_functions.R"))

```

Initially 10 samples were re-analysed using SomaHRD v1.2.7 on 10/04/2024. It was noted that there were some differences in the confidence in genomic instability metric (previously called robustness) compared to the results obtained with SomaHRD v1.2.0.

The full validation cohort was then re-analysed using SomaHRD v1.2.7 on 12/04/2024 to check for any differences in the PDF reports produced.

I am using PDF reports as the data source because when the method was validated only PDFs were available for download from the SeqOne website, although csv files are now provided with new analyses.

Data are stored on my local C drive but are copied here:

S:/central shared/Genetics/Mol_Shared/Development.Team/
SeqOne Homologous Recombination Deficiency Validation/
INC9110 files

```{r}
#| label: load-validation-data
#| include: FALSE

validation_reports_v1_2_0 <- list.files(here::here("data/seqone_reports_v1_2/"),
  full.names = TRUE
)

validation_data_v1_2_0 <- validation_reports_v1_2_0 |>
  map(\(validation_reports_v1_2_0) read_seqone_report(
    file = validation_reports_v1_2_0,
    version = "1.2"
  )) |>
  list_rbind() |> 
  mutate(somahrd_version = "v1.2.0") |> 
  arrange(shallow_sample_id)

stopifnot(anyNA(validation_data_v1_2_0) == FALSE)

stopifnot(!duplicated(validation_data_v1_2_0$shallow_sample_id))

```

```{r}
#| label: load-rerun-pdf-files
#| include: FALSE
#| warning: FALSE

reanalysis_20240410_pdfs <- list.files(path = here::here("data/INC9110_files/20240410_reanalysis"),
                              full.names = TRUE, pattern = ".pdf")

reanalysis_20240410_data <- reanalysis_20240410_pdfs |> 
  map(\(reanalysis_20240410_pdfs) read_seqone_report(reanalysis_20240410_pdfs, version = "1.2")) |> 
  list_rbind() |> 
  mutate(somahrd_version = "v1.2.7") |>
  arrange(shallow_sample_id)

stopifnot(anyNA(reanalysis_20240410_data) == FALSE)

stopifnot(!duplicated(reanalysis_20240410_data$shallow_sample_id))

```

```{r}
#| label: load-full-validation-reanalysis
#| include: FALSE
#| warning: FALSE

reanalysis_20240412_pdfs <- list.files(path = here::here("data/INC9110_files/20240412_reanalysis"),
                              full.names = TRUE, pattern = ".pdf")

reanalysis_20240412_data <- reanalysis_20240412_pdfs |> 
  map(\(reanalysis_20240412_pdfs) read_seqone_report(reanalysis_20240412_pdfs, version = "1.2")) |> 
  list_rbind() |> 
  mutate(somahrd_version = "v1.2.7") |>
  arrange(shallow_sample_id)

stopifnot(anyNA(reanalysis_20240412_data) == FALSE)

stopifnot(!duplicated(reanalysis_20240412_data$shallow_sample_id))

```

```{r}
#| label: check-v1-2-7-results-are-the-same
#| include: FALSE
#| warning: FALSE

x <- reanalysis_20240412_data |> 
  filter(shallow_sample_id %in% reanalysis_20240410_data$shallow_sample_id) 

all.equal(x, reanalysis_20240410_data)

```

{{< pagebreak >}}

## Comparison

When the results from the PDF reports generated by the two pipeline versions are compared, there are no changes in SeqOne HRD score or SeqOne HRD status, but there are differences in the "confidence in genomic instability" metric.

```{r}
#| label: compare-results
#| include: FALSE

all.equal(reanalysis_20240412_data, validation_data_v1_2_0)

```

```{r}
#| label: join-results
#| include: FALSE

results_v120_vs_v127 <- reanalysis_20240412_data |> 
  rbind(validation_data_v1_2_0) 

results_v120_vs_v127_wide <- results_v120_vs_v127 |>
  pivot_wider(id_cols = c(shallow_sample_id, worksheet, sample_id,
                          dlms_dna_number),
              names_from = somahrd_version,
              values_from = -c(shallow_sample_id, worksheet, sample_id,
                          dlms_dna_number, somahrd_version))

write.csv(results_v120_vs_v127_wide, 
          here::here("outputs/results_v120_vs_v127_wide.csv"), 
          row.names = FALSE)

```

## Confidence in Genomic Instability (Robustness)

The confidence in genomic instability metric is calculated by computing copy number ratio profiles with three additional window sizes (150 kilobases, 200 kilobases and 250 kilobases) and comparing the large genomic alteration (LGA) and loss of parental copy (LPC) results to the initial analysis which uses a window size of 100 kilobases.

Confidence in genomic instability is 1 minus the standard deviation of these results.

"Confidence in genomic instability" is referred to as "robustness" in the validation document and in the R code for this validation.

```{r}
#| label: compare-robustness
#| echo: FALSE

robustness_warning_threshold <- 0.93

robustness_fail_threshold <- 0.85

validation_pipeline_comparison <- results_v120_vs_v127_wide |> 
  mutate(robustness_diff = robustness_v1.2.7 - robustness_v1.2.0,
         robustness_diff_abs = abs(robustness_v1.2.7 - robustness_v1.2.0),
         qc_v1_2_7 = case_when(
    
            robustness_v1.2.7 > robustness_warning_threshold ~ "PASS",
            
            robustness_v1.2.7 <= robustness_warning_threshold &
              robustness_v1.2.7 > robustness_fail_threshold ~ "WARNING",
            
            robustness_v1.2.7 <= robustness_fail_threshold ~ "FAIL"),
         
         qc_v1_2_0 = case_when(
    
            robustness_v1.2.0 > robustness_warning_threshold ~ "PASS",
            
            robustness_v1.2.0 <= robustness_warning_threshold &
              robustness_v1.2.0 > robustness_fail_threshold ~ "WARNING",
            
            robustness_v1.2.0 <= robustness_fail_threshold ~ "FAIL"))

```

Confidence in genomic instability varies between the two pipeline versions, but there does not seem to be a systematic bias in the differences.

For quality control, a sample fails if it has a robustness score equal to or lower than 0.85 and a warning is issued if the robustness score is below 0.93.

```{r}
#| label: correlation-plot
#| echo: FALSE

robustness_axis_breaks <- c(seq(0, 0.8, by = 0.1), robustness_fail_threshold,
                                                 robustness_warning_threshold, 1.0)

robustness_correlation_plot <- ggplot(validation_pipeline_comparison, 
                                      aes(x = robustness_v1.2.7,
                                          y = robustness_v1.2.0)) +
  geom_point(pch = 21) +
  theme_bw() +
  labs(x = "Robustness (SomaHRD v1.2.7)", y = "Robustness (SomaHRD v1.2.0)",
       title = "Robustness correlation for two pipeline versions",
       subtitle = "Dashed lines show fail and warning thresholds") +
  geom_hline(yintercept = 0.85, linetype = "dashed") +
  geom_vline(xintercept = 0.85, linetype = "dashed") +
  geom_hline(yintercept = 0.93, linetype = "dashed") +
  geom_vline(xintercept = 0.93, linetype = "dashed") +
  scale_y_continuous(limits = c(0,1), breaks = robustness_axis_breaks) +
  scale_x_continuous(limits = c(0,1), breaks = robustness_axis_breaks)

robustness_correlation_plot

```

{{< pagebreak >}}

### Changes in Robustness Category

This variation did not change the overall HRD status to or from "NON-CONCLUSIVE" in any sample. However there were 8 cases in which the robustness category changed between "WARNING" and "PASS". 

```{r}
#| label: robustness-category-changes
#| echo: FALSE

robustness_category_changes <- validation_pipeline_comparison |> 
  filter(qc_v1_2_7 != qc_v1_2_0) |> 
  arrange(qc_v1_2_7) |> 
  rename("Robustness (v1.2.7)" = robustness_v1.2.7,
         "Robustness (v1.2.0)" = robustness_v1.2.0,
         "QC (v1.2.7)" = qc_v1_2_7,
         "QC (v1.2.0)" = qc_v1_2_0) |> 
  select(shallow_sample_id, "Robustness (v1.2.7)", "Robustness (v1.2.0)", 
         "QC (v1.2.7)", "QC (v1.2.0)")

knitr::kable(robustness_category_changes)

```

{{< pagebreak >}}

### Range of Robustness Difference

In samples with coverage above 0.5X, the difference in robustness varies from -0.05 to 0.07 between the two pipeline versions.

```{r}
#| label: robustness-difference-range
#| echo: FALSE

validation_pipeline_comparison |> 
  filter(coverage_v1.2.7 >= 0.5) |>
  ggplot(aes(x = robustness_diff, y = )) +
  geom_histogram(binwidth = 0.01) +
  theme_bw() +
  labs(x = "Change in robustness score", y = "Number of replicates",
       caption = "Samples with coverage >= 0.5X")
```

## Explanation from SeqOne

SeqOne communicated that in v1.2.0 the argument specifying the change in window sizes for the robustness calculation was missing. This was corrected on 29/11/2023, changing the version from v1.2.0 to v1.2.1. 

The confidence in genomic instability metrics calculated by SomaHRD v1.2.1 onwards are therefore the correct values.