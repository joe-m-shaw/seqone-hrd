---
title: "SeqOne HRD Service Monitoring"
author: "Joe Shaw"
date: today
date-format: "DD/MM/YYYY"
format: pdf
editor: visual
---

```{r}
#| label: packages-and-functions
#| include: false

library("tidyverse")
library("ggpubr")
library("readxl")
library("here")
library("patchwork")
library("knitr")
library("lubridate")

source(here::here("functions/hrd_functions.R"))

```

This is a Quarto for regular monitoring of the SeqOne HRD service. The data presented is collated using the collate_seqone_data.R script.

```{r}
#| label: load-collated-data
#| include: false

data_folder <- config::get("data_filepath")

collated_live_csv_data <- read_csv(file = paste0(data_folder,
                                                 "live_service/service/",
                                                 "collated_data/",
                                                 "collated_live_csv_data.csv"),
                                   col_types = list(
                                     sample = col_character(),
                                     analysis_date = col_character(),
                                     somahrd_version = col_character(),
                                     LGA = col_number(),
                                     LPC = col_number(),
                                     score = col_number(),
                                     status = col_factor(levels = c("Negative",
                                                         "Positive",
                                                         "Non-conclusive")),
                                     brca_status = col_logical(),
                                     brca_mutation = col_logical(),
                                     ccne1_cn = col_number(),
                                     rad51b_cn = col_number(),
                                     coverage = col_number(),
                                     pct_mapped_reads = col_number(),
                                     pct_tum_cell = col_number(),
                                     gi_confidence = col_number(),
                                     low_tumor_fraction = col_number(),
                                     worksheet = col_character(),
                                     labno = col_character())) |> 
  mutate(date = parse_date_time(x = analysis_date, 
                                orders = c("dmy", "ymd")))
  
```

# Live Service

```{r}
#| label: sample-numbers
#| echo: false

summary_table <- collated_live_csv_data |> 
  group_by(status) |> 
  summarise(total = n()) |> 
  mutate(percentage = round((total / sum(total)) * 100, 0)) |> 
  janitor::adorn_totals()

knitr::kable(summary_table) 

```

# HRD Scores

```{r}
#| label: hrd-score-distribution
#| echo: FALSE

safe_blue <- "#88CCEE"
safe_red <- "#CC6677"
safe_grey <- "#888888"

data_for_histogram_plot <- collated_live_csv_data |> 
  filter(status != "Non-conclusive") |> 
  filter(!duplicated(sample))

seqone_histo_plot <- ggplot(data_for_histogram_plot, aes(x = score, y = )) +
                            geom_histogram(binwidth = 0.01, 
                                           aes(fill = status)) +
                            scale_fill_manual(values = c(safe_blue, safe_red)) +
                            theme_bw() +
                            scale_x_continuous(
                              breaks = c(0, 0.25, 0.5, 0.75, 1)) +
                            geom_vline(xintercept = 0.5, linetype = "dashed") +
                            theme(
                              panel.grid = element_blank(),
                              legend.position = "bottom") +
                            labs(
                              y = "Number of samples",
                              x = "SeqOne HRD Score",
                              title = "SeqOne HRD Score Distribution",
                              fill = "SeqOne HRD Status",
                              caption = "Non-conclusive results excluded")

seqone_histo_plot

```

```{r}
#| label: lga-lpc-distribution
#| echo: FALSE

lga_lpc_plot <- collated_live_csv_data |> 
  filter(status != "Non-conclusive") |> 
  filter(!duplicated(sample)) |> 
  group_by(LGA, LPC, status) |> 
  count() |>
    ggplot(aes(x = LGA, y = LPC)) +
                            geom_point(pch = 21, alpha = 0.5,
                                       aes(size = n,
                                           fill = status)) +
  scale_fill_manual(values = c(safe_blue, safe_red)) +
  theme_bw() +
  theme(legend.position = "bottom", legend.box="vertical", legend.margin=margin()) +
  geom_segment(
    data = line_df,
    mapping = aes(x = x, y = y, xend = xend, yend = yend),
    linetype = "dashed") +
  labs(x = "Large Genomic Alterations", y = "Loss of Parental Copy",
       title = "LGA and LPC Results",
       caption = "Non-conclusive results excluded")
  
lga_lpc_plot

```

```{r}
#| label: score-over-time
#| echo: FALSE

ggplot(collated_live_csv_data |> 
         filter(!is.na(score)), aes(x = worksheet, y = score)) +
  geom_point(shape = 21) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90)) +
  geom_hline(yintercept = 0.6, linetype = "dashed") +
  geom_hline(yintercept = 0.4, linetype = "dashed") +
  labs(x = "", y = "SeqOne score",
       title = "Borderline scores over time")

```

{{< pagebreak >}}

# Quality Metrics

```{r}
#| label: qc-metrics
#| echo: FALSE
#| warning: FALSE
#| message: FALSE

cov_dotplot <- draw_qc_dotplot(df = collated_live_csv_data,
                               yvar = coverage, ymin = 0, 
                               ymax = max(collated_live_csv_data$coverage) + 0.5,
                               fill_var = status) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  labs(y = "Coverage (X)")

rob_dotplot <- draw_qc_dotplot(df = collated_live_csv_data,
                               yvar = gi_confidence, 
                               ymin = min(collated_live_csv_data$gi_confidence) - 0.05,
                               ymax = 1.1,
                               fill_var = status) +
  geom_hline(yintercept = 0.85, linetype = "dashed") +
  scale_y_continuous(breaks = seq(0, 1, by = 0.2)) +
  labs(y = "Confidence in genomic instability")

map_dotplot <- draw_qc_dotplot(df = collated_live_csv_data,
                               yvar = pct_mapped_reads,
                               ymin = 0,
                               ymax = 100,
                               fill_var = status) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  scale_y_continuous(breaks = seq(0, 1, by = 0.1),
                     limits = c(0,1)) +
  labs(y = "Percentage correct mapping")

low_tumor_fraction_dot_plot <- draw_qc_dotplot(df = collated_live_csv_data, 
                                               yvar = low_tumor_fraction,
                ymin = 0, ymax = 5,
                fill_var = status) +
  labs(y = "Low tumor fraction (%)")

cov_dotplot

rob_dotplot

map_dotplot

low_tumor_fraction_dot_plot

```

```{r}
#| label: positive-negative-trends
#| echo: FALSE

collated_live_csv_data |> 
  group_by(worksheet) |> 
  count(status) |> 
  ggplot(aes(x = worksheet, y = n, fill = status)) +
  geom_col(colour = "black") +
  scale_fill_manual(values = c(safe_blue, safe_red, safe_grey)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90),
        legend.position = "bottom") +
  labs(x = "", y = "Number of results")

```

{{< pagebreak >}}

# Cumulative results

```{r}
#| label: cumulative-samples
#| echo: FALSE

cumulative_sample_counts <- collated_live_csv_data |> 
  arrange(date) |> 
  group_by(date) |> 
  summarise(total = n()) |> 
  mutate(cum_total = cumsum(total)) 

total_samples <- sum(cumulative_sample_counts$total)

days_of_service <- as.numeric(max(cumulative_sample_counts$date) -
  min(cumulative_sample_counts$date))

samples_per_day <- total_samples / days_of_service

samples_per_month <- round(samples_per_day * 30, 0)

cumulative_samples_plot <- ggplot(cumulative_sample_counts, 
                                  aes(x = date, y = cum_total)) +
  geom_line() +
  scale_x_datetime(date_breaks = "1 month",
                   date_labels = "%b-%Y") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
  labs(x = "", y = "Cumulative samples",
       title = "Manchester GLH SeqOne HRD service",
       subtitle = str_c("Average samples per month: ", samples_per_month)) +
  geom_abline(slope = 32, linetype = "dashed")

cumulative_samples_plot

```






